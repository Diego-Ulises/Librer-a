/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.layout;

import javax.swing.JOptionPane;
import com.datalayer.Handler;
import java.util.ArrayList;
import com.datalayer.Editorial;
import com.datalayer.Libro;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Samuel
 */
public class Ped extends javax.swing.JFrame {

    private ArrayList<Libro> libros;
    private Handler handler;
    private int Nomina;
    private String Fecha;

    /**
     * Creates new form Ped
     */
    public Ped(int Nomina) {
        this.Nomina=Nomina;
        initComponents();
        this.setLocationRelativeTo(null);
        setFecha();
        handler = new Handler();
        updateArrays();
        updateLib();
    }

    private void setFecha() {
        Calendar Calendario = new java.util.GregorianCalendar();
        Fecha = "" + Calendario.get(Calendar.YEAR) + "-" + (Calendario.get(Calendar.MONTH) + 1) + "-" + Calendario.get(Calendar.DAY_OF_MONTH);
    }

    private void updateArrays() {
        libros = handler.showLib();
    }

    private void updateLib() {
        DefaultTableModel model = (DefaultTableModel) LibTable.getModel();
        model.getDataVector().removeAllElements();
        for (int i = (model.getRowCount()); i < libros.size(); i++) {
            Libro tmp = libros.get(i);
            Object[] rowData = new Object[]{tmp.getISBN(), tmp.getTitulo(), tmp.getCantidad(), tmp.getPrec()};
            model.addRow(rowData);
        }
        LibTable.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        LibTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Ped = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        AmountField = new javax.swing.JTextField();
        AddButton = new javax.swing.JButton();
        CancelAll = new javax.swing.JButton();
        CancelSelected = new javax.swing.JButton();
        ButtonsetPed = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        LibTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Nombre Libro", "Existencia", "Costo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(LibTable);

        jLabel2.setText("Libros");

        jLabel3.setText("Detalle del Pedido");

        Ped.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Nombre Libro", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Ped);

        jLabel1.setText("Cantidad");

        AddButton.setText("Agregar");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        CancelAll.setText("Cancelar todo");
        CancelAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelAllActionPerformed(evt);
            }
        });

        CancelSelected.setText("Cancelar seleccion");
        CancelSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelSelectedActionPerformed(evt);
            }
        });

        ButtonsetPed.setText("Realizar Pedido");
        ButtonsetPed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonsetPedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AmountField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CancelAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CancelSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(497, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 349, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(13, 21, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(125, 125, 125)
                            .addComponent(ButtonsetPed, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addGap(21, 21, 21)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CancelAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AmountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddButton)
                    .addComponent(CancelSelected))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGap(26, 26, 26)
                    .addComponent(ButtonsetPed)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        int row = LibTable.getSelectedRow();
        if (row >= 0) {
            int id = (int) LibTable.getValueAt(row, 0);

            try {
                int amount = Integer.parseInt(AmountField.getText().trim());
                if (amount > 0) {
                    DefaultTableModel model = (DefaultTableModel) Ped.getModel();
                    DefaultTableModel model2 = (DefaultTableModel) LibTable.getModel();
                    libros.forEach((tmp) -> {
                        if (tmp.getISBN() == id) {
                            Object[] toAdd = new Object[]{tmp.getISBN(), tmp.getTitulo(), amount};
                            model.addRow(toAdd);
                        }
                    });
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Solo puede vender cantidades positivas", "Revise cantidad", JOptionPane.WARNING_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Ingrese una cantidad valida");
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleccione un libro de la tabla");
        }
    }//GEN-LAST:event_AddButtonActionPerformed

    private void CancelAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelAllActionPerformed
        DefaultTableModel model = (DefaultTableModel) Ped.getModel();
        model.getDataVector().removeAllElements();
        updateLib();
        Ped.updateUI();
    }//GEN-LAST:event_CancelAllActionPerformed

    private void CancelSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelSelectedActionPerformed
        int row=Ped.getSelectedRow();
        DefaultTableModel model=(DefaultTableModel) Ped.getModel();
        model.removeRow(row);        
        Ped.updateUI();
    }//GEN-LAST:event_CancelSelectedActionPerformed

    private void ButtonsetPedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonsetPedActionPerformed
        if (Ped.getRowCount() > 0) {
            if (JOptionPane.showConfirmDialog(this, "Confirmar pedido", "Confirme", JOptionPane.YES_NO_CANCEL_OPTION) == JOptionPane.YES_OPTION) {
                String ticket = "Detalle: \n\n";
                int IDPedido = handler.Pedido(Nomina, Fecha);
                DefaultTableModel model = (DefaultTableModel) Ped.getModel();
                int x=0;
                for (int i = 0; i < model.getRowCount(); i++) {
                    int ISBN = (int) model.getValueAt(i, 0);
                    for (int j = 0; j < libros.size(); j++) {
                        if(libros.get(j).getISBN()==ISBN){
                            x=j;
                        }
                    }
                    int Cantidad = (int) model.getValueAt(i, 2);
                    handler.LibPed(IDPedido, ISBN, Cantidad,libros.get(x).getNombreEdit());
                    ticket += model.getValueAt(i, 1) + "  Cantidad: " + model.getValueAt(i, 2)+"\n";
                }
                JOptionPane.showMessageDialog(rootPane, ticket);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Agrege libros al pedido");
        }
        updateArrays();
        updateLib();
        CancelAllActionPerformed(null);
    }//GEN-LAST:event_ButtonsetPedActionPerformed

    public void init() {
        this.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JTextField AmountField;
    private javax.swing.JButton ButtonsetPed;
    private javax.swing.JButton CancelAll;
    private javax.swing.JButton CancelSelected;
    private javax.swing.JTable LibTable;
    private javax.swing.JTable Ped;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
